#-----------------------------------------------------------------------------------------------------------------------
# Dev or production environment mode
# If set to 'development' transactions will be executed on a local fork, no private keys are needed
# If set to 'production' transactions will be executed on the real blockchain, private keys are needed
# If left empty it will default to 'development'
#-----------------------------------------------------------------------------------------------------------------------

ENVIRONMENT = development

# For development mode, name of the host running the local fork (e.g. with docker compose, the name of the
# container running Anvil). If left empty they will default to 'localhost'
LOCAL_FORK_HOST_ETHEREUM =
LOCAL_FORK_HOST_GNOSIS =

# For development mode, ports running local forks of Ethereum and Gnosis. If left empty they will default
# to 8546 and 8547, respectively
LOCAL_FORK_PORT_ETHEREUM =
LOCAL_FORK_PORT_GNOSIS =

#-----------------------------------------------------------------------------------------------------------------------
# Tenderly Credentials
#-----------------------------------------------------------------------------------------------------------------------

TENDERLY_ACCOUNT_ID =
TENDERLY_PROJECT =
TENDERLY_API_TOKEN =


#-----------------------------------------------------------------------------------------------------------------------
# Slack channel webhook url (can be left empty)
#-----------------------------------------------------------------------------------------------------------------------

SLACK_WEBHOOK_URL =


#-----------------------------------------------------------------------------------------------------------------------
# Ethereum (for development mode fill in the DISASSEMBLER_ADDRESS while leaving PRIVATE_KEY empty, for production
# mode fill in the PRIVATE_KEY and DISASSEMBLER_ADDRESS can be left empty)
#-----------------------------------------------------------------------------------------------------------------------

# RPC endpoints for eth_call
ETHEREUM_RPC_ENDPOINT =
ETHEREUM_RPC_ENDPOINT_FALLBACK =

# RPC endpoint with MEV protection for eth_sendTransaction for the execution of transactions. If left empty
# ETHEREUM_RPC_ENDPOINT will be used for the execution by default
ETHEREUM_RPC_ENDPOINT_MEV =

# Gnosis DAO
GNOSISDAO_ETHEREUM_AVATAR_SAFE_ADDRESS =
GNOSISDAO_ETHEREUM_ROLES_MOD_ADDRESS =
GNOSISDAO_ETHEREUM_ROLE =
GNOSISDAO_ETHEREUM_PRIVATE_KEY =
GNOSISDAO_ETHEREUM_DISASSEMBLER_ADDRESS =

# Gnosis LTD
GNOSISLTD_ETHEREUM_AVATAR_SAFE_ADDRESS =
GNOSISLTD_ETHEREUM_ROLES_MOD_ADDRESS =
GNOSISLTD_ETHEREUM_ROLE =
GNOSISLTD_ETHEREUM_PRIVATE_KEY =
GNOSISLTD_ETHEREUM_DISASSEMBLER_ADDRESS =

#-----------------------------------------------------------------------------------------------------------------------
# Gnosis (for development mode fill in the DISASSEMBLER_ADDRESS while leaving PRIVATE_KEY empty, for production
# mode fill in the PRIVATE_KEY and DISASSEMBLER_ADDRESS can be left empty)
#-----------------------------------------------------------------------------------------------------------------------

# RPC endpoints for eth_call
GNOSIS_RPC_ENDPOINT =
GNOSIS_RPC_ENDPOINT_FALLBACK =

# RPC endpoint with MEV protection for eth_sendTransaction for the execution of transactions. If left empty
# GNOSIS_RPC_ENDPOINT will be used for the execution by default
GNOSIS_RPC_ENDPOINT_MEV =

# Gnosis DAO
GNOSISDAO_GNOSIS_AVATAR_SAFE_ADDRESS =
GNOSISDAO_GNOSIS_ROLES_MOD_ADDRESS =
GNOSISDAO_GNOSIS_ROLE =
GNOSISDAO_GNOSIS_PRIVATE_KEY =
GNOSISDAO_GNOSIS_DISASSEMBLER_ADDRESS =


# Gnosis LTD
GNOSISLTD_GNOSIS_AVATAR_SAFE_ADDRESS =
GNOSISLTD_GNOSIS_ROLES_MOD_ADDRESS =
GNOSISLTD_GNOSIS_ROLE =
GNOSISLTD_GNOSIS_PRIVATE_KEY =
GNOSISLTD_GNOSIS_DISASSEMBLER_ADDRESS =

from web3 import Web3

import roles_royce.protocols.eth.compound_v3 as compound
from roles_royce.constants import ETHAddr


def test_approve():
    m = compound.Approve(token=ETHAddr.USDC, comet=compound.Comet.cUSDCv3, amount=123)
    assert (
        m.data
        == "0x095ea7b3000000000000000000000000c3d688b66703497daa19211eedff47f25384cdc3000000000000000000000000000000000000000000000000000000000000007b"
    )


def test_allow():
    m = compound.Allow(comet=compound.Comet.cUSDCv3)
    assert (
        m.data
        == "0x110496e5000000000000000000000000a397a8c2086c554b531c02e29f3291c9704b00c70000000000000000000000000000000000000000000000000000000000000001"
    )


def test_supply():
    m = compound.Supply(comet=compound.Comet.cUSDCv3, token=ETHAddr.USDC, amount=123)
    assert (
        m.data
        == "0xf2b9fdb8000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000000000000000000000000000000000000000007b"
    )


def test_supply_eth():
    m = compound.SupplyETH(
        comet=compound.Comet.cUSDCv3,
        avatar="0x24dd242c3c4061b1fcaa5119af608b56afbaea95",
        amount=Web3.to_wei(1, "ether"),
    )
    assert m.value == Web3.to_wei(1, "ether")
    assert (
        m.data
        == "0x555029a6000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001414354494f4e5f535550504c595f4e41544956455f544f4b454e000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c3d688b66703497daa19211eedff47f25384cdc300000000000000000000000024dd242c3c4061b1fcaa5119af608b56afbaea950000000000000000000000000000000000000000000000000de0b6b3a7640000"
    )


def test_withdraw_eth():
    assert compound.ACTION_WITHDRAW_NATIVE_TOKEN == "0x414354494f4e5f57495448445241575f4e41544956455f544f4b454e00000000"

    m = compound.WithdrawETH(
        comet=compound.Comet.cUSDCv3,
        avatar="0x24Dd242c3c4061b1fCaA5119af608B56afBaEA95",
        amount=Web3.to_wei(1, "ether"),
    )
    assert (
        m.data
        == "0x555029a6000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000001414354494f4e5f57495448445241575f4e41544956455f544f4b454e00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c3d688b66703497daa19211eedff47f25384cdc300000000000000000000000024dd242c3c4061b1fcaa5119af608b56afbaea950000000000000000000000000000000000000000000000000de0b6b3a7640000"
    )


def test_borrow():
    m = compound.Borrow(comet=compound.Comet.cUSDCv3, token=ETHAddr.USDC, amount=100 * 10**6)
    assert (
        m.data
        == "0xf3fef3a3000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000000000000000000000000000000000000005f5e100"
    )


def test_claim():
    m = compound.Claim(
        comet=compound.Comet.cUSDCv3, avatar="0x24Dd242c3c4061b1fCaA5119af608B56afBaEA95", should_accrue=True
    )
    assert (
        m.data
        == "0xb7034f7e000000000000000000000000c3d688b66703497daa19211eedff47f25384cdc300000000000000000000000024dd242c3c4061b1fcaa5119af608b56afbaea950000000000000000000000000000000000000000000000000000000000000001"
    )

import json
from roles_royce import GenericMethodTransaction
from roles_royce.protocols.roles_modifier import (
    AssignRolesV1,
    AssignRolesV2,
    ScopeTarget,
    ScopeFunction,
    EnableModule,
    ExecTransactionWithRoleV1,
    ExecTransactionWithRoleV2,
    get_exec_transaction_with_role_method,
)
from roles_royce.protocols.roles_modifier.contract_methods import SetTransactionUnwrapper


def test_exect_transaction_with_role():
    roles_mod_address = "0x8C33ee6E439C874713a9912f3D3debfF1Efb90Da"
    to = "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
    data = "0x095ea7b3000000000000000000000000c92e8bdf79f0507f65a392b0ab4667716bfe01100000000000000000000000000000000000000000000000000000000000000064"
    method_v1 = ExecTransactionWithRoleV1(
        data=data, role=1, to=to, operation=0, value=0, roles_mod_address=roles_mod_address
    )
    assert method_v1.target_address == roles_mod_address
    assert method_v1.inputs == {
        "to": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "value": 0,
        "data": b"\t^\xa7\xb3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc9.\x8b\xdfy\xf0P\x7fe\xa3\x92\xb0\xabFgqk\xfe\x01\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d",
        "operation": 0,
        "role": 1,
        "should_revert": True,
    }

    method_v2 = ExecTransactionWithRoleV2(
        data=data, role="MY-ROLE", to=to, operation=0, value=0, roles_mod_address=roles_mod_address
    )
    assert method_v2.inputs == {
        "to": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "value": 0,
        "data": b"\t^\xa7\xb3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc9.\x8b\xdfy\xf0P\x7fe\xa3\x92\xb0\xabFgqk\xfe\x01\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d",
        "operation": 0,
        "role_key": b"MY-ROLE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00",
        "should_revert": True,
    }


def test_get_exec_transaction_with_role_method():
    roles_mod_address = "0x8C33ee6E439C874713a9912f3D3debfF1Efb90Da"
    to = "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
    data = (
        "0x095ea7b3000000000000000000000000c92e8bdf79f0507f65a392b0ab4667716bfe011000000000000000000000"
        "00000000000000000000000000000000000000000064"
    )

    method = get_exec_transaction_with_role_method(
        data=data, role=1, to=to, operation=0, value=0, roles_mod_address=roles_mod_address
    )
    isinstance(method, ExecTransactionWithRoleV1)

    method = get_exec_transaction_with_role_method(
        data=data, role="FOO", to=to, operation=0, value=0, roles_mod_address=roles_mod_address
    )
    isinstance(method, ExecTransactionWithRoleV2)


def test_enable_module():
    roles_mod_address = "0x8C33ee6E439C874713a9912f3D3debfF1Efb90Da"
    account_address = "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
    method = EnableModule(roles_mod_address=roles_mod_address, module=account_address)
    assert method.data == "0x610b59250000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0"


def test_assign_roles_v1():
    roles_mod_address = "0x8C33ee6E439C874713a9912f3D3debfF1Efb90Da"
    account_address = "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
    method = AssignRolesV1(roles_mod_address=roles_mod_address, module=account_address, assign_list=[3])
    assert method.data == (
        "0xa6edf38f0000000000000000000000007f39c581f595b53c5cb19bd0b3f8da6c935e2ca0000"
        "00000000000000000000000000000000000000000000000000000000000600000000000000000"
        "0000000000000000000000000000000000000000000000a000000000000000000000000000000"
        "00000000000000000000000000000000001000000000000000000000000000000000000000000"
        "00000000000000000000030000000000000000000000000000000000000000000000000000000"
        "0000000010000000000000000000000000000000000000000000000000000000000000001"
    )


def test_assign_roles_v2():
    roles_mod_address = "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb"
    module = "0x2C3e7b8570655c7b1608aB6ae9CC8273624f2c59"
    method = AssignRolesV2(
        roles_mod_address=roles_mod_address,
        module=module,
        assign_list=["0x475541524449414e2d4175726152656c6f636b65720000000000000000000000"],
    )
    expected = "0x957ed2b30000000000000000000000002c3e7b8570655c7b1608ab6ae9cc8273624f2c59000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001475541524449414e2d4175726152656c6f636b6572000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001"
    assert method.data == expected

    tx_json = """{
      "to": "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb",
      "contractInputsValues": {
        "module": "0x2C3e7b8570655c7b1608aB6ae9CC8273624f2c59",
        "roleKeys": ["0x475541524449414e2d4175726152656c6f636b65720000000000000000000000"],
        "memberOf": [true]
      }
    }"""
    abi = """[{
    "inputs": [
      {
        "internalType": "address",
        "name": "module",
        "type": "address"
      },
      {
        "internalType": "bytes32[]",
        "name": "roleKeys",
        "type": "bytes32[]"
      },
      {
        "internalType": "bool[]",
        "name": "memberOf",
        "type": "bool[]"
      }
    ],
    "name": "assignRoles",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
    }]"""

    tx = json.loads(tx_json)
    function_args = list(tx["contractInputsValues"].values())
    generic_tx = GenericMethodTransaction(
        function_name="assignRoles", function_args=function_args, contract_abi=abi, contract_address=roles_mod_address
    )
    assert generic_tx.data == expected


def test_scope_target():
    roles_mod_address = "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb"
    method = ScopeTarget(
        roles_mod_address=roles_mod_address,
        role="0x475541524449414e2d4175726152656c6f636b65720000000000000000000000",
        target="0x5b2364fD757E262253423373E4D57C5c011Ad7F4",
    )

    expected = "0x0c6c76b8475541524449414e2d4175726152656c6f636b657200000000000000000000000000000000000000000000005b2364fd757e262253423373e4d57c5c011ad7f4"
    assert method.data == expected

    # double check with the GenericMethodTransaction
    tx_json = """{
      "to": "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb",
      "value": "0",
      "contractInputsValues": {
        "roleKey": "0x475541524449414e2d4175726152656c6f636b65720000000000000000000000",
        "targetAddress": "0x5b2364fD757E262253423373E4D57C5c011Ad7F4"
      }
    }
    """
    abi = """[{
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "roleKey",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "targetAddress",
        "type": "address"
      }
    ],
    "name": "scopeTarget",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }]"""

    tx = json.loads(tx_json)
    function_args = list(tx["contractInputsValues"].values())
    generic_tx = GenericMethodTransaction(
        function_name="scopeTarget", function_args=function_args, contract_abi=abi, contract_address=roles_mod_address
    )
    assert generic_tx.data == expected


def test_scope_function():
    roles_mod_address = "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb"
    method = ScopeFunction(
        roles_mod_address=roles_mod_address,
        role="0x475541524449414e2d4175726152656c6f636b65720000000000000000000000",
        target="0x5b2364fD757E262253423373E4D57C5c011Ad7F4",
        selector="0xd34640b2",
        conditions=[
            [0, 5, 5, "0x"],
            [0, 4, 0, "0x"],
            [0, 4, 0, "0x"],
            [0, 4, 0, "0x"],
            [0, 4, 0, "0x"],
            [0, 1, 0, "0x"],
            [0, 3, 5, "0x"],
            [1, 1, 0, "0x"],
            [2, 1, 0, "0x"],
            [3, 1, 0, "0x"],
            [4, 1, 0, "0x"],
            [6, 1, 0, "0x"],
            [6, 1, 0, "0x"],
            [6, 1, 16, "0x0000000000000000000000000000000000000000000000000000000000000000"],
            [6, 1, 16, "0x0000000000000000000000000000000000000000000000000000000000000000"],
            [6, 1, 16, "0x0000000000000000000000000000000000000000000000000000000000000000"],
            [6, 1, 16, "0x0000000000000000000000000000000000000000000000000000000000000000"],
            [6, 1, 16, "0x0000000000000000000000000000000000000000000000000000000000000001"],
        ],
        options=0,
    )

    expected = "0x7508dd98475541524449414e2d4175726152656c6f636b657200000000000000000000000000000000000000000000005b2364fd757e262253423373e4d57c5c011ad7f4d34640b20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000380000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000004c00000000000000000000000000000000000000000000000000000000000000560000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000006a0000000000000000000000000000000000000000000000000000000000000074000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000880000000000000000000000000000000000000000000000000000000000000092000000000000000000000000000000000000000000000000000000000000009c00000000000000000000000000000000000000000000000000000000000000a600000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000be00000000000000000000000000000000000000000000000000000000000000ca00000000000000000000000000000000000000000000000000000000000000d
    assert method.data == expected

    # double check with the GenericMethodTransaction
    tx_json = """
    {
      "to": "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb",
      "contractInputsValues": {
        "roleKey": "0x475541524449414e2d4175726152656c6f636b65720000000000000000000000",
        "targetAddress": "0x5b2364fD757E262253423373E4D57C5c011Ad7F4",
        "selector": "0xd34640b2",
        "conditions": [[0,5,5,"0x"],[0,4,0,"0x"],[0,4,0,"0x"],[0,4,0,"0x"],[0,4,0,"0x"],[0,1,0,"0x"],[0,3,5,"0x"],[1,1,0,"0x"],[2,1,0,"0x"],[3,1,0,"0x"],[4,1,0,"0x"],[6,1,0,"0x"],[6,1,0,"0x"],[6,1,16,"0x0000000000000000000000000000000000000000000000000000000000000000"],[6,1,16,"0x0000000000000000000000000000000000000000000000000000000000000000"],[6,1,16,"0x0000000000000000000000000000000000000000000000000000000000000000"],[6,1,16,"0x0000000000000000000000000000000000000000000000000000000000000000"],[6,1,16,"0x0000000000000000000000000000000000000000000000000000000000000001"]],
        "options": 0
      }
    }
    """
    abi = """[{
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "roleKey",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "targetAddress",
        "type": "address"
      },
      {
        "internalType": "bytes4",
        "name": "selector",
        "type": "bytes4"
      },
      {
        "components": [
          {
            "internalType": "uint8",
            "name": "parent",
            "type": "uint8"
          },
          {
            "internalType": "enum ParameterType",
            "name": "paramType",
            "type": "uint8"
          },
          {
            "internalType": "enum Operator",
            "name": "operator",
            "type": "uint8"
          },
          {
            "internalType": "bytes",
            "name": "compValue",
            "type": "bytes"
          }
        ],
        "internalType": "struct ConditionFlat[]",
        "name": "conditions",
        "type": "tuple[]"
      },
      {
        "internalType": "enum ExecutionOptions",
        "name": "options",
        "type": "uint8"
      }
    ],
    "name": "scopeFunction",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }]"""

    tx = json.loads(tx_json)
    function_args = list(tx["contractInputsValues"].values())
    generic_tx = GenericMethodTransaction(
        function_name="scopeFunction", function_args=function_args, contract_abi=abi, contract_address=roles_mod_address
    )
    assert generic_tx.data == expected


def test_set_transaction_unwrapper():
    roles_mod_address = "0x27d8bb2e33Bc38A9CE93fdD90C80677b8436aFfb"
    method = SetTransactionUnwrapper(
        roles_mod_address=roles_mod_address,
        to="0x38869bf66a61cF6bDB996A6aE40D5853Fd43B526",
        selector="0x8d80ff0a",
        adapter="0x93B7fCbc63ED8a3a24B59e1C3e6649D50B7427c0",
    )
    assert method.data == "0x2916a9af00000000000000000000000038869bf66a61cf6bdb996a6ae40d5853fd43b5268d80ff0a0000000000000000000000000000000000000000000000000000000000000000000000000000000093b7fcbc63ed8a3a24b59e1c3e6649d50b7427c0"
